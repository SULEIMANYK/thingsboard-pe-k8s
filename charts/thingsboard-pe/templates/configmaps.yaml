{{/* Database Configuration */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-db-config
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.componentLabels" (dict "component" "database-config" "root" .) | nindent 4 }}
data:
  SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
  SPRING_DRIVER_CLASS_NAME: org.postgresql.Driver
  SPRING_DATASOURCE_URL: jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}
  SPRING_DATASOURCE_USERNAME: {{ .Values.database.username | quote }}
  {{- if not .Values.database.existingSecret }}
  SPRING_DATASOURCE_PASSWORD: {{ .Values.database.password | quote }}
  {{- end }}
  {{- if .Values.database.properties.hibernateJdbcLobNonContextualCreation }}
  SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION: {{ .Values.database.properties.hibernateJdbcLobNonContextualCreation | quote }}
  {{- end }}
---

{{/* Cache Configuration */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-cache-config
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.componentLabels" (dict "component" "cache-config" "root" .) | nindent 4 }}
data:
  CACHE_TYPE: {{ .Values.cache.type }}
  {{- if eq .Values.cache.type "redis" }}
  REDIS_HOST: {{ .Values.cache.redis.host }}
  REDIS_PORT: {{ .Values.cache.redis.port | quote }}
  REDIS_USE_DEFAULT_POOL_CONFIG: {{ .Values.cache.redis.useDefaultPoolConfig | quote }}
  {{- if .Values.cache.redis.password }}
  REDIS_PASSWORD: {{ .Values.cache.redis.password | quote }}
  {{- end }}
  {{- end }}
---

{{/* Kafka Configuration */}}
{{- if eq .Values.queue.type "kafka" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-kafka-config
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.componentLabels" (dict "component" "kafka-config" "root" .) | nindent 4 }}
data:
  TB_QUEUE_TYPE: kafka
  TB_KAFKA_SERVERS: {{ .Values.queue.kafka.servers }}
  TB_QUEUE_KAFKA_REPLICATION_FACTOR: {{ .Values.queue.kafka.replicationFactor | quote }}
  TB_KAFKA_ACKS: {{ .Values.queue.kafka.acks | quote }}
---
{{- end }}

{{/* ThingsBoard Node Configuration */}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-node-config
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.componentLabels" (dict "component" "node-config" "root" .) | nindent 4 }}
data:
  conf: |
      export JAVA_OPTS="$JAVA_OPTS -Dplatform=deb -Dinstall.data_dir=/usr/share/thingsboard/data"
      export JAVA_OPTS="$JAVA_OPTS -Xlog:gc*,heap*,age*,safepoint=debug:file=/var/log/thingsboard/gc.log:time,uptime,level,tags:filecount=10,filesize=10M"
      export JAVA_OPTS="$JAVA_OPTS -XX:+IgnoreUnrecognizedVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/thingsboard/heapdump.bin"
      export JAVA_OPTS="$JAVA_OPTS -XX:-UseBiasedLocking -XX:+UseTLAB -XX:+ResizeTLAB -XX:+PerfDisableSharedMem -XX:+UseCondCardMark"
      export JAVA_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:MaxTenuringThreshold=10"
      export JAVA_OPTS="$JAVA_OPTS -XX:+ExitOnOutOfMemoryError"
      export LOG_FILENAME=thingsboard.out
      export LOADER_PATH=/usr/share/thingsboard/conf,/usr/share/thingsboard/extensions
  logback: |
      <!DOCTYPE configuration>
      <configuration scan="true" scanPeriod="10 seconds">
          <appender name="fileLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>/var/log/thingsboard/thingsboard.log</file>
              <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                  <fileNamePattern>/var/log/thingsboard/thingsboard.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                  <maxFileSize>100MB</maxFileSize>
                  <maxHistory>30</maxHistory>
                  <totalSizeCap>3GB</totalSizeCap>
              </rollingPolicy>
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
          </appender>
          <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
          </appender>
          <logger name="org.thingsboard.server" level="INFO" />
          <logger name="com.google.common.util.concurrent.AggregateFuture" level="OFF" />
          <logger name="org.apache.kafka.common.utils.AppInfoParser" level="WARN"/>
          <logger name="org.apache.kafka.clients" level="WARN"/>
          <root level="INFO">
              <appender-ref ref="fileLogAppender"/>
              <appender-ref ref="STDOUT"/>
          </root>
      </configuration>
---

{{/* Integration Executor Configuration */}}
{{- if and (include "thingsboard-pe.isMicroservices" .) .Values.integrationExecutor.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "thingsboard-pe.fullname" . }}-ie-config
  namespace: {{ include "thingsboard-pe.namespace" . }}
  labels:
    {{- include "thingsboard-pe.componentLabels" (dict "component" "integration-executor-config" "root" .) | nindent 4 }}
data:
  conf: |
      export JAVA_OPTS="$JAVA_OPTS -Dplatform=deb -Dinstall.data_dir=/usr/share/thingsboard/data"
      export JAVA_OPTS="$JAVA_OPTS -Xlog:gc*,heap*,age*,safepoint=debug:file=/var/log/thingsboard/gc.log:time,uptime,level,tags:filecount=10,filesize=10M"
      export JAVA_OPTS="$JAVA_OPTS -XX:+IgnoreUnrecognizedVMOptions -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/var/log/thingsboard/heapdump.bin"
      export JAVA_OPTS="$JAVA_OPTS -XX:-UseBiasedLocking -XX:+UseTLAB -XX:+ResizeTLAB -XX:+PerfDisableSharedMem -XX:+UseCondCardMark"
      export JAVA_OPTS="$JAVA_OPTS -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:MaxTenuringThreshold=10"
      export JAVA_OPTS="$JAVA_OPTS -XX:+ExitOnOutOfMemoryError"
      export LOG_FILENAME=tb-integration-executor.out
      export LOADER_PATH=/usr/share/thingsboard/conf,/usr/share/thingsboard/extensions
  logback: |
      <!DOCTYPE configuration>
      <configuration scan="true" scanPeriod="10 seconds">
          <appender name="fileLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
              <file>/var/log/thingsboard/tb-integration-executor.log</file>
              <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                  <fileNamePattern>/var/log/thingsboard/tb-integration-executor.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                  <maxFileSize>100MB</maxFileSize>
                  <maxHistory>30</maxHistory>
                  <totalSizeCap>3GB</totalSizeCap>
              </rollingPolicy>
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
          </appender>
          <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
              <encoder>
                  <pattern>%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n</pattern>
              </encoder>
          </appender>
          <logger name="org.thingsboard.server" level="INFO" />
          <logger name="com.google.common.util.concurrent.AggregateFuture" level="OFF" />
          <logger name="org.apache.kafka.common.utils.AppInfoParser" level="WARN"/>
          <logger name="org.apache.kafka.clients" level="WARN"/>
          <root level="INFO">
              <appender-ref ref="fileLogAppender"/>
              <appender-ref ref="STDOUT"/>
          </root>
      </configuration>
{{- end }}
